// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SHO_Task.Infrastructure;

#nullable disable

namespace SHO_Task.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250108063529_add_base_SHO_entities")]
    partial class add_base_SHO_entities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SHO_Task.Domain.ShippingOrders.ShippingOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("delivery_date");

                    b.Property<int>("PalletCount")
                        .HasColumnType("int")
                        .HasColumnName("pallet_count");

                    b.Property<Guid>("PurchaseOrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("purchase_order_id");

                    b.Property<string>("SHONumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("sho_number");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.HasKey("Id")
                        .HasName("pk_shipping_orders");

                    b.HasIndex("PurchaseOrderId")
                        .HasDatabaseName("ix_shipping_orders_purchase_order_id");

                    b.HasIndex("SHONumber")
                        .IsUnique()
                        .HasDatabaseName("ix_shipping_orders_sho_number");

                    b.ToTable("ShippingOrders", "SHO");
                });

            modelBuilder.Entity("SHO_Task.Infrastructure.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("error");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("datetime2")
                        .HasColumnName("occurred_on_utc");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("datetime2")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_outbox_messages");

                    b.ToTable("outbox_messages", (string)null);
                });

            modelBuilder.Entity("SHO_Task.Domain.ShippingOrders.ShippingOrder", b =>
                {
                    b.OwnsMany("SHO_Task.Domain.Items.ShippingOrderItem", "ShippingOrderItems", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("id");

                            b1.Property<string>("GoodCode")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("good_code");

                            b1.Property<decimal>("Quantity")
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("quantity");

                            b1.Property<int>("SerialNumber")
                                .HasColumnType("int")
                                .HasColumnName("serial_number");

                            b1.Property<Guid>("ShippingOrderId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("shipping_order_id");

                            b1.HasKey("Id")
                                .HasName("pk_shipping_items");

                            b1.HasIndex("ShippingOrderId")
                                .HasDatabaseName("ix_shipping_items_shipping_order_id");

                            b1.ToTable("ShippingItems", "SHO");

                            b1.WithOwner()
                                .HasForeignKey("ShippingOrderId")
                                .HasConstraintName("fk_shipping_items_shipping_orders_shipping_order_id");

                            b1.OwnsOne("SHO_Task.Domain.Common.Money", "Price", b2 =>
                                {
                                    b2.Property<Guid>("ShippingOrderItemId")
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("id");

                                    b2.Property<decimal>("Amount")
                                        .HasColumnType("decimal(18,2)")
                                        .HasColumnName("price_amount");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasMaxLength(3)
                                        .HasColumnType("nvarchar(3)")
                                        .HasColumnName("price_currency");

                                    b2.HasKey("ShippingOrderItemId");

                                    b2.ToTable("ShippingItems", "SHO");

                                    b2.WithOwner()
                                        .HasForeignKey("ShippingOrderItemId")
                                        .HasConstraintName("fk_shipping_items_shipping_items_id");
                                });

                            b1.Navigation("Price")
                                .IsRequired();
                        });

                    b.Navigation("ShippingOrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
